"""Initial migration

Revision ID: 3afa2d4ca63a
Revises: 
Create Date: 2024-12-12 15:40:55.542263

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3afa2d4ca63a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_business_hours_id', table_name='business_hours')
    op.drop_table('business_hours')
    op.drop_index('ix_professionals_id', table_name='professionals')
    op.drop_table('professionals')
    op.drop_index('ix_salons_id', table_name='salons')
    op.drop_table('salons')
    op.drop_index('ix_ratings_id', table_name='ratings')
    op.drop_table('ratings')
    op.drop_index('ix_professional_services_id', table_name='professional_services')
    op.drop_table('professional_services')
    op.drop_index('ix_services_id', table_name='services')
    op.drop_table('services')
    op.drop_index('ix_portfolio_items_id', table_name='portfolio_items')
    op.drop_table('portfolio_items')
    op.drop_index('ix_appointments_id', table_name='appointments')
    op.drop_table('appointments')
    op.drop_index('ix_clients_id', table_name='clients')
    op.drop_table('clients')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clients',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('clients_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('preferences', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('allergies', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('loyalty_points', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='clients_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_clients_id', 'clients', ['id'], unique=False)
    op.create_table('appointments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('professional_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('service_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('salon_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('time', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.CheckConstraint("status::text = ANY (ARRAY['scheduled'::character varying, 'completed'::character varying, 'cancelled'::character varying]::text[])", name='valid_status'),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], name='appointments_client_id_fkey'),
    sa.ForeignKeyConstraint(['professional_id'], ['professionals.id'], name='appointments_professional_id_fkey'),
    sa.ForeignKeyConstraint(['salon_id'], ['salons.id'], name='appointments_salon_id_fkey'),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], name='appointments_service_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='appointments_pkey')
    )
    op.create_index('ix_appointments_id', 'appointments', ['id'], unique=False)
    op.create_table('portfolio_items',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('professional_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('salon_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('image_url', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('service_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['professional_id'], ['professionals.id'], name='portfolio_items_professional_id_fkey'),
    sa.ForeignKeyConstraint(['salon_id'], ['salons.id'], name='portfolio_items_salon_id_fkey'),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], name='portfolio_items_service_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='portfolio_items_pkey')
    )
    op.create_index('ix_portfolio_items_id', 'portfolio_items', ['id'], unique=False)
    op.create_table('services',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('services_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('duration', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('price', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('salon_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('estimated_duration', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['salon_id'], ['salons.id'], name='services_salon_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='services_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_services_id', 'services', ['id'], unique=False)
    op.create_table('professional_services',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('professional_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('service_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['professional_id'], ['professionals.id'], name='professional_services_professional_id_fkey'),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], name='professional_services_service_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='professional_services_pkey')
    )
    op.create_index('ix_professional_services_id', 'professional_services', ['id'], unique=False)
    op.create_table('ratings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('salon_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('rating', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('comment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.CheckConstraint('rating >= 1 AND rating <= 5', name='valid_rating_range'),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], name='ratings_client_id_fkey'),
    sa.ForeignKeyConstraint(['salon_id'], ['salons.id'], name='ratings_salon_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='ratings_pkey')
    )
    op.create_index('ix_ratings_id', 'ratings', ['id'], unique=False)
    op.create_table('salons',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('salons_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('address', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('state', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('zip_code', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('rating', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('total_ratings', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('image_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='salons_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_salons_id', 'salons', ['id'], unique=False)
    op.create_table('professionals',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('specialties', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('commission_rate', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('salon_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('working_hours', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('bio', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('profile_image', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['salon_id'], ['salons.id'], name='professionals_salon_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='professionals_pkey')
    )
    op.create_index('ix_professionals_id', 'professionals', ['id'], unique=False)
    op.create_table('business_hours',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('salon_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('day_of_week', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('open_time', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('close_time', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('is_closed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['salon_id'], ['salons.id'], name='business_hours_salon_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='business_hours_pkey')
    )
    op.create_index('ix_business_hours_id', 'business_hours', ['id'], unique=False)
    # ### end Alembic commands ###
